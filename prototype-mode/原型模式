原型模式：
    需求：
        现在有一只羊,姓名为 tom ,年龄为 1 岁，颜色为 白色，请编写程序创建和 tom 羊属性完全相同的十只羊。

    基本介绍：
        1> 原型模式是指：用原型实例指定创建对象的种类，并且通过拷贝这些原型，创建新的对象
        2> 原型模式是一种创建型设计模式，允许一个对象再创建另外一个可定制的对象，无需知道创建的细节。
    工作原理:
        通过将一个原型对象传给那个要发动创建的对象，这个要发动创建的对象通过请求原型对象拷贝他们自己来实时创建，即 对象.clone()
    形象的理解：
        孙大圣拔出猴毛，变出其他孙大圣
    深入讨论深拷贝和浅拷贝：
        1> 对于数据类型是基本数据类型的成员变量，浅拷贝会直接进行值传递，也就是将该属性值复制一份给新的对象
        2> 对于数据类型是引用数据类型的成员变量，比如说成员变量是某个数组、某个类的对象等等，那么浅拷贝会进行引用传递，也就是只是将
            该成员变量的引用值(内存地址) 复制一份给新的对象，因为实际上两个对象的该成员变量都指向同一个实例。在这种情况下，在一个对象中
            修改该成员变量会影响到另一个对象的该成员变量。

        前面的 克隆羊就是浅拷贝，只是使用了默认的方法 对象.clone() 方法来实现
        3> 深拷贝的方式一：重写 clone() 方法进行深拷贝
        4> 深拷贝的方式二：通过对象序列化实现深拷贝 （推荐使用）
