饿汉式-静态常量：
    步骤如下：
        1> 构造器私有化(防止 new )
        2> 类的内部创建对象
        3> 向外暴露一个静态的公共方法
        4> 代码实现

优缺点：
    1> 优点：写法简单，在类装载的时候就完成实例化，避免了线程同步问题
    2> 缺点：在类装载的时候就完成实例化，没有达到 Lazy loading 的效果。如果从始至终从没用到这个类，就会造成资源浪费
    3> 这种方式基于 classloader 机制避免了多线程的问题。不过 instance 在类装载的时候就实例化，在单利模式中大多数都是调用 getInstance() 方法，
        但是导致类装载的原因有很多种，因此确定不能有其他的方式导致类装载，这时候初始化 instance 就没有达到 Lazy loading 的效果

    4> 结论： 这种模式可用，但是会造成浪费